<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
 
	<context:component-scan base-package="gz.nozing.library.web.controller" />
 
 	<mvc:annotation-driven/>
 	
 	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		id="viewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.tiles3.TilesView</value>
		</property>
	</bean>
 
 	<!-- Tiles configuration -->
    <bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-definitions.xml</value>
            </list>
        </property>
    </bean>
       
    <!-- Internationalization -->    
    <bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages/Messages" />
	</bean>
    
    <!-- SessionLocaleResolver resolves locales by inspecting a predefined 
    	 attribute in a user’s session. If the session attribute doesn’t exist, 
    	 this locale resolver determines the default locale from the 
    	 accept-language HTTP header. -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="es" />
    </bean>
  
  	<!-- LocaleChangeInterceptor interceptor detects if a special parameter is 
  	     present in the current HTTP request. The parameter name can be 
  	     customized with the paramName property of this interceptor. If such a 
  	     parameter is present in the current request, this interceptor changes 
  	     the user’s locale according to the parameter value -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>
     
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
            </list>
        </property>
    </bean>
    
</beans>